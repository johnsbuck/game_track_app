# Generated by Django 4.0 on 2022-01-02 04:29

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Console',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Developer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=130, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=130, unique=True)),
                ('consoles', models.ManyToManyField(to='game_track_app.Console')),
                ('developers', models.ManyToManyField(to='game_track_app.Developer')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, default='')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_track_app.game')),
            ],
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=130, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('recommendation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='game_track_app.recommendation')),
                ('score', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
            ],
            bases=('game_track_app.recommendation',),
        ),
        migrations.CreateModel(
            name='Reviewer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=130, unique=True)),
                ('recommended_games', models.ManyToManyField(related_name='recommended', through='game_track_app.Recommendation', to='game_track_app.Game')),
                ('reviewed_games', models.ManyToManyField(related_name='reviewed', through='game_track_app.Review', to='game_track_app.Game')),
            ],
        ),
        migrations.AddField(
            model_name='recommendation',
            name='reviewer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_track_app.reviewer'),
        ),
        migrations.CreateModel(
            name='GameStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('NP', 'Not Planned'), ('WL', 'Wait-listed'), ('OH', 'On Hold'), ('DP', 'Dropped'), ('IP', 'In Progress'), ('FMS', 'Finished Main Story'), ('FMSP', 'Finished Main Story + Extra'), ('CMP', 'Completed'), ('CTN', 'Continuous')], default='NP', max_length=4)),
                ('percentage', models.PositiveSmallIntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_track_app.game')),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='genres',
            field=models.ManyToManyField(to='game_track_app.Genre'),
        ),
        migrations.AddField(
            model_name='game',
            name='series',
            field=models.ManyToManyField(to='game_track_app.Series'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('reviewer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='game_track_app.reviewer')),
                ('game_library', models.ManyToManyField(related_name='library', through='game_track_app.GameStat', to='game_track_app.Game')),
            ],
            bases=('game_track_app.reviewer',),
        ),
        migrations.AddField(
            model_name='gamestat',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_track_app.user'),
        ),
    ]
